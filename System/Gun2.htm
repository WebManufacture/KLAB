<!DOCTYPE HTML>
<html>
	<head>
		<meta content="text/html; charset=utf-8" http-equiv="Content-Type">
		<title>Блоксхема</title>
		
		<script type="text/javascript" src="http://system.web-manufacture.net/Gun.js"></script>
		<script type="text/javascript" src="http://system.web-manufacture.net/jG.js"></script>
		<script type='text/javascript'>
			var Blocks = {};
	
			Blocks.Init = function(){
				Blocks.board = document.getElementById('board');
				Blocks.board.onmousedown = Blocks.AddNewBlock;
				Blocks.paper = document.getElementById("canvas");
				Blocks.connections = [];
				Drag.Init();
			};
			
			Blocks.BlockCounter = function(){
				if (!Blocks.BlockCounter._value) Blocks.BlockCounter._value = 0;
				Blocks.BlockCounter._value += 1;
				return Blocks.BlockCounter._value;
			}
			
			Blocks.AddNewBlock = function(e){
				var newBlock = document.createElement('div');
				newBlock.className = 'block';
				Blocks.board.appendChild(newBlock);
				newBlock.id = 'id' + Blocks.BlockCounter();
				Blocks.board.onmousemove = function(m){
					if ((m.pageX - e.pageX) > 0){
						newBlock.style.left = e.pageX + 'px';
						newBlock.style.width = m.pageX - e.pageX + 'px';	
					}else{
						newBlock.style.left = m.pageX + 'px';
						newBlock.style.width = e.pageX - m.pageX + 'px';	
					};
					if ((m.pageY - e.pageY) > 0){
						newBlock.style.top = e.pageY + 'px';
						newBlock.style.height = m.pageY - e.pageY + 'px';	
					}else{
						newBlock.style.top = m.pageY + 'px';
						newBlock.style.height = e.pageY - m.pageY + 'px';	
					};
				};
				
				Blocks.board.onmouseup = function(up){
					Blocks.board.onmousemove = null;

					newBlock.oncontextmenu = function(e){
						Blocks.AddConnection(this);
						return false;
					};
					newBlock.ondblclick = function(e){
						newBlock.contentEditable = true;
						newBlock.focus();
						newBlock.onblur = function(a){
							newBlock.contentEditable = false;
							return;
						};
						e.stopPropagation();
						return false;
					};
					var DiffX = up.pageX - e.pageX;
					var DiffY = up.pageY - e.pageY;
					if (Math.abs(DiffX) < 20 || Math.abs(DiffY) < 20 ){
						if (newBlock) Blocks.board.removeChild(newBlock);
						return;
					};
					Drag.MakeDraggable(newBlock);
					
					newBlock.onmousedown = function(e){
						e.stopPropagation();
					};
					newBlock.onmouseup = function(e){
						e.stopPropagation();
					};
				};
			};
			
			Blocks.AddConnection = function(elem){
				
				if (!Blocks.AddConnection.elem){
					Blocks.AddConnection.elem = elem;
					elem.className = 'selected';
				}else{
					var oldElem = Blocks.AddConnection.elem;
					var newConnection = [];
					newConnection.push(oldElem);
					newConnection.push(elem);
					Blocks.connections.push(newConnection);

					if (!oldElem.connection) oldElem.connection = [];
					
					oldElem.className = 'block';
					
					Blocks.ShowConnection(oldElem, elem);
					Blocks.AddConnection.elem = null;
				};
					
			};
			
			Blocks.ClearCanvas = function(){
				Blocks.paper.width = Blocks.paper.width;
			}
			
			Blocks.BustConnections = function(){
				Blocks.ClearCanvas();
				for (var i = 0; i < Blocks.connections.length; i++){
					Blocks.ShowConnection(Blocks.connections[i][0], Blocks.connections[i][1]);
				};
			};
			
			Blocks.ShowConnection = function(from, to){
				var context = Blocks.paper.getContext("2d");
				context.beginPath();
				var optPoints = Blocks.Shorter(from, to);
				context.moveTo(optPoints.f.x, optPoints.f.y);
				context.lineTo(optPoints.t.x, optPoints.t.y);
				context.strokeStyle = "red";
				context.stroke();
			};
			
			Blocks.Shorter = function(from, to){
				var fromPoints = Blocks.Pointer(from);
				var toPoints = Blocks.Pointer(to);
				var optPointsNumbers = Blocks.DistanseCalc(fromPoints, toPoints);
				var optPoints = {};
				optPoints.f = fromPoints[optPointsNumbers.f];
				optPoints.t = toPoints[optPointsNumbers.t];
				return optPoints;
			};
			
			Blocks.Pointer = function(elem){
				var points = [];
				var pointA = {},
					pointB = {},
					pointC = {},
					pointD = {};
				
				pointA.x = parseInt(elem.style.left);
				pointA.y = parseInt(elem.style.top) + parseInt(elem.style.height) / 2;
				points.push(pointA);
				
				pointB.x = parseInt(elem.style.left) + parseInt(elem.style.width) / 2;
				pointB.y = parseInt(elem.style.top);
				points.push(pointB);
				
				pointC.x = parseInt(elem.style.left) + parseInt(elem.style.width) / 2;
				pointC.y = parseInt(elem.style.top) + parseInt(elem.style.height);
				points.push(pointC);
				
				pointD.x = parseInt(elem.style.left) + parseInt(elem.style.width);
				pointD.y = parseInt(elem.style.top) + parseInt(elem.style.height) / 2;
				points.push(pointD);
				
				
				return points;
			};
			
			Blocks.DistanseCalc = function(f, t){
				var points = {};
				var minDist = Infinity;
				for (var i = 0; i < f.length; i++){
					for (var j = 0; j < t.length; j++){
						var dist = Math.sqrt(Math.pow(Math.abs(f[i].x - t[j].x), 2) + Math.pow(Math.abs(f[i].y - t[j].y), 2));	
						if (dist < minDist){
							minDist = dist;
							points.f = i;
							points.t = j;
						};
					};
				};
				return points;
			};

			
			window.onload = Blocks.Init;
		</script>
		
		<style type="text/css">
			#board{
				width: 1000px;
				height: 500px;
				border: 1px solid navy;
				position: absolute;
			}
			#canvas{
				border: 1px solid red;
				position: absolute;
			}
			.block{
				z-index: 100;
				border: 1px solid black;
				position: absolute;
			}
			.selected{
				z-index: 100;
				border: 1px solid green;
				position: absolute;
			}
			
		</style>
		
	</head>
	<body>
		<div id='board'><canvas id='canvas' width="1000" height="500"></canvas></div>	
	</body>
</html>

