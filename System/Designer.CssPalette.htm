<include url="System.Win.htm" alt="system.windows.htm"></include>

<div class="module-button" icon="text-css.png" onclick="Win.ShowWindow('#cssPalette')"></div>

<style type="text/css">
    .css-palette
    {
	width : 300px;
	height: 350px;
    }
    
    .props-block 
    {
	padding-left: 10px;
    }
    
    .props-block .block-title{
	color: #3366FF;
	font-weight: bold;
	cursor: pointer;
	margin-left: -10px;
    }
    
    .props-block:hover .block-title{
	color: #3300FF!important;
    }
    
    .props-block.hided .block-title{
	color:#339999;
    }

    .prop{
	cursor: pointer;
	padding-left: 10px;
	color: #666;
    }
    
    .prop .prop-name{
	margin-left: -10px;
    }
    
    .prop .sub-prop{
	display: none;
    }
    
    .prop:hover{
	color: black;
	font-weight: bold;
	border: solid 1px gray;
    }
    
    .prop .sub-prop{
	color: #9900CC;
	font-weight: normal;
    }
    
    .prop:hover .sub-prop{
	display: block;
    }
    
    .props-block.hided .prop{
	display: none;
    }
</style>
<win class="css-palette" id="cssPalette" type="smallwindow" url="Designer.CssPalette.htm" title="CSS палитра">
    <div class="props-block" title="backgrounds">
	<div class="prop">
	    <div class='prop-name'>background:</div>
	    <div class='sub-prop'>none;</div>
	</div>
	<div class="prop">
	    <div class='prop-name'>background-color:</div>
	    <div class='sub-prop'>#eee;</div>
	    <div class='sub-prop'>#ccc;</div>	
	    <div class='sub-prop'>#999;</div>	
	</div>
	<div class="prop"><div class='prop-name'>background-repeat:</div></div>
	<div class="prop"><div class='prop-name'>background-size:</div></div>
	<div class="prop"><div class='prop-name'>background-position:</div></div>
	<div class="prop"><div class='prop-name'>background-image:</div></div>
    </div>
    <div class="props-block" title="borders">
	<div class="prop">
	    <div class='prop-name'>border:</div>
	    <div class='sub-prop'>solid 1px;</div>
	    <div class='sub-prop'>solid 1px red;</div>	
	    <div class='sub-prop'>solid 1px black;</div>	
	    <div class='sub-prop'>none;</div>
	</div>
	<div class="prop"><div class='prop-name'>border-color:</div></div>
    </div>
    <div class="props-block" title="fonts">
	<div class="prop">
	    <div class='prop-name'>font-weight:</div>
	    <div class='sub-prop'>bold;</div>
	    <div class='sub-prop'>normal;</div>
	</div>
	<div class="prop">
	    <div class='prop-name'>font-size:</div>
		<div class='sub-prop'>10px;</div>
		<div class='sub-prop'>11px;</div>
		<div class='sub-prop'>12px;</div>
		<div class='sub-prop'>13px;</div>
		<div class='sub-prop'>14px;</div>
		<div class='sub-prop'>16px;</div>
		<div class='sub-prop'>18px;</div>
		<div class='sub-prop'>24px;</div>
	    </div>
    </div>
    <div class="prop">
	<div class='prop-name'>float:</div>
	<div class='sub-prop'>left;</div>
	<div class='sub-prop'>right;</div>	
	<div class='sub-prop'>none;</div>
    </div>
</win>
	
<script type="text/javascript">
    CssPal = W.get("#cssPalette");

    CssPal.Init = function(){
	var blocks = CssPal.findAll(".props-block");
	for (var i = 0; i < blocks.length; i++){
	    var title = blocks[i].attr("title");
	    blocks[i].Title = W.div("block-title", title);
	    blocks[i].insert(blocks[i].Title);
	    blocks[i].Title.onclick = CssPal.ShowHideBlock;
	}
	var props = CssPal.findAll(".prop");
	for (var i = 0; i < props.length; i++){
	    props[i].pnameElem = props[i].get(".prop-name");
	    props[i].pnameElem.attr("draggable", "true");
	    props[i].pnameElem.ondragstart = CssPal.MoveStart;
	    props[i].pname = props[i].pnameElem.innerHTML;
	    var sprops = props[i].findAll(".sub-prop");
	    for (var j = 0; j < sprops.length; j++){
		sprops[j].attr("draggable", "true");
		sprops[j].pname = props[i].pname;
		sprops[j].ondragstart = CssPal.SubMoveStart;
	    }
	}
	
    }
	
    CssPal.MoveStart = function (event){
	event.dataTransfer.setData('text/plain', this.pname);
	event.dataTransfer.effectAllowed = 'copy';
    }
	    
    CssPal.SubMoveStart = function (event){
	event.dataTransfer.setData('text/plain', this.pname + this.innerHTML);
	event.dataTransfer.effectAllowed = 'copy';
    }
	
	CssPal.ShowHideBlock = function(){
	    this.parentNode.toggle("hided");
	}
	    
    CssPal.Init();
</script>