<check url="System.Windows.htm"></check>

<win module="System.Log.htm" class="log_window invisible" title="Лог системы">
    <div class="subbar filter-bar"></div> 
</win>

<div class="module-button Log-button" onclick="Logging.ShowWindow()"></div>

<script type="text/javascript" id="logging">
  Logging = M.GetModuleByUrl("System.Log.htm");

  Logging.Init = function(url, module){
    //W.Body.adg(".Log-button");
      window.addEventListener("keypress", Logging.KeyHook, false);
      if (!Check(window.Toolbars)){
	    Logging.ShowWindow();
      }
  }
  
  Logging.ShowWindow = function(){
     var win = W.get(".window.log_window");
    if (win == null){
      win = W.get("win.log_window");
      win.cls("nowindows");
      win.content = win;
      W.Body.add(win);
    }
    Logging.Win = win;
    win.ondblclick = Logging.CloseWindow;
    win.show();
    if (win.initialized){
      return;
    }
     var filter = win.get(".filter-bar");
     Logging.Log = win.content.add(L.Log);
     var modules = [];
     var items = L.Log.findAll(".item");
     for (var i = 0; i < items.length; i++)
     {
         var module = items[i].attr("module");
         if (modules.indexOf(module) < 0){
         modules.push(module);
         var tag = filter.adv("tag", module);
         tag.onclick = Logging.tagClick;
       }
     }    
     var modfilter = filter.adv("filter windows", "Windows");
     modfilter.filter = modfilter.attr("filter","[module='System.Windows.htm']");
     modfilter.onclick = Logging.filterClick;
    
     var modfilter = filter.adv("filter modules", "Modules");
     modfilter.filter = modfilter.attr("filter",".modules");
     modfilter.onclick = Logging.filterClick;
     
     modfilter = modfilter.adv("filter modules registered", "Modules-Reg");
     modfilter.filter = modfilter.attr("filter",".modules.registered");
     modfilter.onclick = Logging.filterClick;
     
     
     win.initialized = true;
  }
    
  Logging.CloseWindow = function(){
     Logging.Win.hide();
  }
      
  Logging.KeyHook = function(event){
      if (event.ctrlKey && event.charCode == 108){
	  Logging.ShowWindow();
	  event.stopPropagation();
	  event.preventDefault();
	  return false;
      } 
  }

  Logging.tagClick = function(event) {
      var tag = this.html();
      Logging.Log.rcs("filtered");
      Logging.Win.findAll(".item").rcs("highlite");
      if (event.ctrlKey) {
          Logging.Log.cls("filtered");
          Logging.Win.findAll(".item").hide();
          Logging.Win.findAll(".item[module='" + tag + "']").show();
          event.stopPropagation();
          return false;
      }
      Logging.Win.findAll(".item").show();
      Logging.Win.findAll(".item[module='" + tag + "']").cls("highlite");
  };
    
  Logging.filterClick = function(event){
    var tag = this.attr("filter");
    Logging.Log.cls("filtered");
    Logging.Win.findAll(".item").hide();  
    Logging.Win.findAll(".item" + tag).show();  
    event.stopPropagation();
    return false;
  }
    
  Logging.Init();
</script>

<style>
  win.nowindows{
    position: fixed;
    top : 20%;
    left : 20%;
    width: 60%;
    height: 60%;
    border: solid 1px gray;
    padding-top: 20px;
    background-color: #EEE;
  }
  
  win.nowindows .subbar{
    position: absolute;
    height: 20px;
    top: 0;
    left: 0;
  }
  
  .Log-button1{
    width: 48px;
    height: 48px;
    position : fixed;
    right : 0;
    top: 0;
    opacity: 0.2;
    z-index: 100;
    background-image: url("http://system.web-manufacture.net/Images/guake.png");  
  }
  
  .module-button.Log-button{
    background-image: url("http://system.web-manufacture.net/Images/guake.png");  
  }
    
  .Log-button:hover
  {    
    opacity: 1;  
  }
  
  
  .window.log_window
  {
    height: 400px;
    background-color: white;
  }
  
  .window.log_window .window_content
  {   
    height: 80%;
    font-family: courier;
    background-color: #EEE;
  }
  
  .log_window  .tag
{
  color: #33AA88;
  display: block;
  float: left;
  padding-left: 10px;
  padding-top: 5px;
  padding-bottom: 5px;
  padding-right:10px;
  font-size: 11px;
  cursor: pointer;
}
  
  .log_window  .filter{
    color: #BB3300;
    display: block;
    float: left;
    padding-left: 10px;
    padding-top: 5px;
    padding-bottom: 5px;
    padding-right:10px;
    font-size: 11px;
    cursor: pointer;
    position: relative;
  }
  
  .log_window .filter .filter
  {
    display: none; 
    
  }
  
  .log_window .filter:hover
  {
    color: #BB9900;
  }
  
  .log_window .filter:hover>.filter
  {
    display: block; 
    position: absolute;
    top: 15px;
    left: 10px;
  }
  
  .log_window .log
  {   
    overflow-y: scroll;
    height: 100%;
  }

  
  .log_window .log .item
  {
     border: solid 1px #DDD;  
  }
  
  .log_window .log.filtered .item
  {
   
  }
  
  .log_window .log .item.highlite
  {
    background-color: #EFC;
  }
  
  .log_window .log .item:hover
  {
    background-color: #DDD;
  }

  
  .log_window .log .item.err
  {
    color: red; 
  }
  
  .log_window .log .item.warn
  {
    color: #D50; 
  }
  
  .log_window .log.filtered .item.modules.loading{
    background-image: url("http://system.web-manufacture.net/1rightarrow.png");
    background-repeat: no-repeat;
    background-position: left center;
    padding-left: 20px;
    color: #5B0;
  }
  
  .log_window .log.filtered .item.modules.registered{
    color: #D30;
  }
</style>
