<!DOCTYPE html>
<html>
	<head>
		<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
		<link type='text/css' rel='stylesheet' href="http://Services.web-manufacture.net/Styles/System.default.css" />
		<script type="text/javascript" src="http://Services.web-manufacture.net/Base/v1.3/Utils.js"></script>
		<script type="text/javascript" src="http://Services.web-manufacture.net/Base/v1.3/DOM.js"></script>
		<script type="text/javascript" src="http://Services.web-manufacture.net/Base/v1.3/Events.js"></script>
		<script type="text/javascript" src="http://Services.web-manufacture.net/Base/v1.3/Log.js"></script>
		<script type="text/javascript" src="http://Services.web-manufacture.net/Base/v1.3/Jasp.js"></script>
		<script type="text/javascript" src="http://Services.web-manufacture.net/Base/v1.3/Url.js"></script>
		<script type="text/javascript" src="http://services.web-manufacture.net/Base/v1.3/Net.js"></script>
		<script type="text/javascript" src="http://Services.web-manufacture.net/Base/v1.3/Modules.js"></script>
		<script type="text/javascript" src="http://Services.web-manufacture.net/Base/v1.3/ui.js"></script>
		
		
		
		<title>Конфигурация сервера</title>
		
		<style type="text/css">
			body{
				background-color: #fff;  				
			} 
			
			.block {
				background: rgba(255, 255, 255, 0.6);
				border: solid 1px #ccc;
				border-radius: 10px;
				padding: 10px;
				width: 85%;
				height: auto;
			}
					
			.header.toolbar .menuitem.disabled{
				background-color: gray;	
				opacity: 0.2;
			}
			
			#Notify{
				background-color: white;
				border: 1px solid navy;
				border-radius: 10px 10px 10px 10px;
				cursor: default;
				font-size: 16px;
				height: 300px;
				text-align: left;
				width: 8%;
				opacity: 0.5;
				position: fixed;
				top: 1%;
				right: 1%;
				z-index: 20;
				padding: 7px;
				font-size: 12px;
				overflow: hidden;
			}
			
			#Notify .event{
				color: #333;
			}
			
			#Notify .event.first{
				background-color:yellow;
			}
			
			#Notify .event.error{
				color: red;
			}
			
			.js-entity .path{
				width: 200px;
				color: black;
				font-size: 120%;
			}
			
			#NodesBlock .object-template{
				width: 180px;
				height: 180px;
				display: inline-block;
				border: solid 1px gray;
				border-radius: 5px;
				margin: 10px;
				padding: 5px;
				overflow: hidden;
				background-color: rgba(100,255,0,0.5);
				opacity: 0.6;				
				font-family: monospace;
				
				font-size: 12px;
			}
			
			
			#NodesBlock .object-template:hover{
				opacity: 1;
				width: 250px;
			}
			
			
			#NodesBlock .object-template[data-state='Error']{
				background-color: rgba(255,0,0,0.5);
			}
			
			#NodesBlock .object-template[data-state='Idle']{
				background-color: rgba(100,100,100,0.5);
			}
			
			#NodesBlock .object-template .node-host{
				white-space: nowrap;
				overflow: hidden;
				width: 100%;
				height: 16px;
				color: navy;
				font-size: 14px;
				font-weight: bold;
			}
			
			#NodesBlock .object-template .node-icon{
				width: 100%;
				height: 100px;
				float: left;
			}
			
			#NodesBlock .object-template[data-location='localhost'] .node-icon{
				background: url("http://www.iconsearch.ru/uploads/icons/crystalclear/128x128/network_local.png") no-repeat center;
				background-size: 90px;
			}
			
			#NodesBlock .object-template[data-location='remote'] .node-icon{
				background: url("http://www.iconsearch.ru/uploads/icons/glaze/128x128/network.png") no-repeat center;
				
				background-size: 90px;
			}
			
			#NodesBlock .object-template .node-controls .mini-btn{
				width: 34px;
				height: 34px;
				display: inline-block;
			}
			
			#NodesBlock .object-template .node-controls .mini-btn:hover{
				border-radius: 3px;
				background-color: yellow!important;
			}
			
			#NodesBlock .object-template .node-controls .mini-btn.start{
				background: url('http://www.iconsearch.ru/uploads/icons/nuove/32x32/player_play.png') no-repeat center;
			}
			
			#NodesBlock .object-template .node-controls .mini-btn.stop{
				background: url('http://www.iconsearch.ru/uploads/icons/humano2/32x32/gtk-media-stop.png') no-repeat center;
			}
			
			#NodesBlock .object-template .node-controls .mini-btn.remove{
				background: url('http://www.iconsearch.ru/uploads/icons/softwaredemo/32x32/deletered.png') no-repeat center;
			}
			
		</style>
	</head>
	<body>
		<include url='http://services.web-manufacture.net/Grids/SimpleGrids.js'></include>
		<include url='http://services.web-manufacture.net/UI/UiUtils.htm'></include>
		<include url='http://services.web-manufacture.net/UI/HtmlElements.htm'></include>
		<include url="http://services.web-manufacture.net/ui/Toolbars.htm"></include>
		<div id="Notify">
		</div>
		<div id='serverVer'></div>
		<div class="simple-grid block" url='/nodes' id="NodesBlock">
			<div class='object-template prototype'>
				<div class='node-icon'></div>
				<div class='node-host' field='Host'>
				</div>
				<div class='node-file' field='File'>
				</div>
				<div class='node-controls'>
					<div class='mini-btn start'></div>
					<div class='mini-btn stop'></div>
					<div class='mini-btn remove'></div>
				</div>
			</div>
		</div>
		
		<div class="header toolbar" id="Toolbar">
			<div onclick="ConfManager.ShowLogs();" icon="http://cdn1.iconfinder.com/data/icons/fatcow/32/file_extension_log.png" tooltip="Логи" class="menuitem save">
			</div>
			<div onclick="ConfManager.ShowConfigs();" icon="http://cdn2.iconfinder.com/data/icons/stilllife/48x48/apps/gnome-server-config.png" tooltip="Конфиги" class="menuitem save">
			</div>
		</div>
		
		<script key="TextEditor" type="text/javascript">
			
			Notify = {};
			
			Notify.Show = function (message) {
				var nf = DOM("#Notify");
				var ev = nf.div(".event.first", (new Date()).formatTime() + " " + message);
				nf.show();
				nf.ins(ev);
				Notify.setTimeout();
			};
			
			Notify.Error = function (error) {
				var nf = DOM("#Notify");
				var ev = nf.div(".event.error.first", (new Date()).formatTime() + " " + error);
				nf.show();
				nf.ins(ev);
				Notify.setTimeout();
			};
			
			Notify.setTimeout = function () {
				if (Notify.timeout) {
					window.clearTimeout(Notify.timeout);
				}
				Notify.timeout = window.setTimeout(Notify.clearFirst, 3000);
			};
			
			Notify.clearFirst = function () {
				DOM.all("#Notify .event.first").del(".first");
			};
			
			function XH() {
				var xmlhttp;
				xmlhttp = new XMLHttpRequest();
				return xmlhttp;
			};
			
			ConfManager = {};
			
			ConfManager.Init = function(){
				Server = new Net.GetTunnel();
			};
			
			ConfManager.ShowLogs = function(){
				var url = new Url("/");
				url.host = url.host.replace(url.hostname, "logs." + url.hostname);
				url.hostname = "logs." + url.hostname;
				Server.get(url + "", ConfManager.LogsLoaded);
			};
			
			ConfManager.FormatNodeItem = function(item, data){
				item.add("." + data.Location + "." + data.State);
			};
			
			ConfManager.LogsLoaded = function(result, status){
				if (status == 200){
					var logs = JSON.parse(result);
					for (var i = 0; i < logs.length; i++){
						var log = logs[i];	
						DOM("#Logs").div("." + log.type, log.message);
					}
					
				}
				else{
					Notify.Error("Logs not loaded: " + status);	
				}				
			};
			
			ConfManager.ConfigsLoaded = function(result, status){
				if (status == 200){
					
					ConfManager.DisplayConfigs(JSON.parse(result));
					//DOM("#Config").add(" " + result);
				}
				else{
					Notify.Error("Logs not loaded: " + status);	
				}		
			};
			
			ConfManager.DisplayConfigs = function(result){
				var configsSorted = result.sort(ConfManager.SortByPath);
				for (var i=0; i < configsSorted.length; i++){
					var configPath = configsSorted[i].path;
					var configID = configsSorted[i]._id;
					delete configsSorted[i].path;
					delete configsSorted[i]._id;
					var pathObj = DOM.formatJSON(JSON.stringify(configsSorted[i]));
					pathObj.AttrProperty('key');							 
					pathObj.id = 'id' + configID;
					pathObj.key = configID;
					
					//var pathDiv = DOM.div('.path', configPath);
					pathObj.ins(DOM.div('.path', configPath));
					DOM("#Config").add(DOM.div(pathObj));
				};
			};
			
			ConfManager.SortByPath = function(a, b){
				return a.path > b.path ? 1 : -1;
			};
			
			WS.DOMload(ConfManager.Init);
			
		</script>
		
	</body>
</html>
