<!DOCTYPE html>
<script src="System._JS.js" type="text/javascript" key="System.JS"></script>
<script src="System._Ajax.js" type="text/javascript" key="System.Ajax"></script>
<script src="System._Utils.js" type="text/javascript" key="System.Utils"></script>
<script src="System._Modules.js" type="text/javascript"></script>
<script src="codemirror-compressed.js" type="text/javascript" key="System.Ajax"></script>
<link rel="stylesheet" href="System.default.css"/>
<link rel="stylesheet" href="javascript.css"/>
<link rel="stylesheet" href="xml.css"/>
<link rel="stylesheet" href="css.css"/>
<meta content="text/html; charset=utf-8" http-equiv="Content-Type">
<include url="System._Notification.htm"></include>
<include url="System._ToolBars.htm"></include>
<div class="header toolbar menu">
  <div class="menuitem text-editor save" tooltip="Сохранить" onclick="Editor.SaveFile();"></div>
  <div class="menuitem text-editor reindent" onclick="Editor.TextReindentAll();"></div>
  <div class="status"></div>
</div>
  
<script type="text/javascript" key="TextEditor">
        
  
    Editor = {}; 
  
   
  
  Editor.Init = function(){
    //var meta = document.createElement("meta");
    //meta.setAttribute("content", "text/html; charset=utf-8");
    //meta.setAttribute("http-equiv", "Content-Type");
    //W.Body.parentNode.firstChild.appendChild(meta);
    Editor.fileName = Request.Params.file;
    X.ContentGet(Editor.fileName, Editor.LoadFileComplete);
  }
  

    Editor.LoadFileComplete = function(received, result, xmlHttp) {
      var parsers = "";
      var header = this.getResponseHeader("Content-Type");
      if (header != null) 
      {
        if (header.Contains(["text/html", "text/htm"])) {
	  parsers = "htmlmixed";
        }
        if (header.Contains(["text/javascript", "application/x-javascript", "text/js"])) {
          parsers = "javascript";
        }
        if (header.Contains("text/css")) {
          parsers = "css";
        }
        if (header.Contains("text/xml")) {
          parsers = "xml";
        }
      }
      Editor.TextEditor = CodeMirror(W.Body, {mode: parsers});
      Editor.TextEditor.setValue(this.responseText);
	  var title = W.Header.add("<title>" + Editor.fileName + "</title>");
    }

    Editor.SaveFile = function() {
     	if (Editor.fileName != null) {
          var btn = W.get(".menuitem.save");
          btn.hide();
          var content = Editor.TextEditor.getValue();
          var request = X.ContentSave(Editor.fileName, content, Editor.SaveComplete);
        }
    }
      
    Editor.SaveComplete = function(){
    	var status = W.get(".header .status");
        var name = W.Wrap(this.responseText).get(".name");
        Notify.Show("Сохранено - " + name.html());
        var btn = W.get(".menuitem.save");
        btn.show();
    }

    Editor.TextReindentAll = function() {
        this.TextEditor.reindent();
    }
      
    W.OnLoad(Editor.Init);

</script>
  
<style type="text/css">
  body{
   background-color: #eee;  
  }
  
  
  
  .CodeMirror {
  line-height: 1em;
  font-family: monospace;
    margin-top: 100px;
}

.CodeMirror-gutter {
  position: absolute; left: 0; top: 0;
  background-color: #f7f7f7;
  border-right: 1px solid #eee;
  min-width: 2em;
  height: 100%;
}
.CodeMirror-gutter-text {
  color: #aaa;
  text-align: right;
  padding: .4em .2em .4em .4em;
}
.CodeMirror-lines {
  padding: .4em;
}

.CodeMirror pre {
  -moz-border-radius: 0;
  -webkit-border-radius: 0;
  -o-border-radius: 0;
  border-radius: 0;
  border-width: 0; margin: 0; padding: 0; background: transparent;
  font-family: inherit;
}

.CodeMirror-cursor {
  z-index: 10;
  position: absolute;
  visibility: hidden;
  border-left: 1px solid black !important;
}
.CodeMirror-focused .CodeMirror-cursor {
  visibility: visible;
}

span.CodeMirror-selected {
  background: #ccc !important;
  color: HighlightText !important;
}
.CodeMirror-focused span.CodeMirror-selected {
  background: Highlight !important;
}

.CodeMirror-matchingbracket {color: #0f0 !important;}
.CodeMirror-nonmatchingbracket {color: #f22 !important;}
</style>
