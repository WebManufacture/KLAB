<!DOCTYPE html>
<script src="System.JS.js" type="text/javascript" key="System.JS"></script>
<script src="System.Jasp.js" type="text/javascript" key="System.Utils"></script>
<script src="System.Ajax.js" type="text/javascript" key="System.Ajax"></script>
<script src="System.Utils.js" type="text/javascript" key="System.Utils"></script>
<script src="System.Modules.js" type="text/javascript"></script>
<script src="Codemirror/codemirror-compressed.js" type="text/javascript"></script>
<link rel="stylesheet" href="System.default.css"/>
<link rel="stylesheet" href="Codemirror/javascript.css"/>
<link rel="stylesheet" href="Codemirror/xml.css"/>
<link rel="stylesheet" href="Codemirror/css.css"/>
<meta content="text/html; charset=utf-8" http-equiv="Content-Type">
<include url="System.Notification.htm"></include>
<include url="System.Toolbars.htm"></include>

<win class="text-editor ui-block content"  url="System.TextEditor.htm">
  <div class="header toolbar">
      <div class="menuitem save" tooltip="Сохранить" icon="save-mini.png" onclick="Editor.SaveFile();"></div>
      <div class="menuitem save" tooltip="История сохранений" icon="save-mini.png" onclick="Editor.ShowHistory();"></div>
      <div class="separator"></div>
      <div class="menuitem color" style="background-size: 48px 48px;" tooltip="Палитра" icon="color.png" onclick="M.LoadModule('System.ColorPalette.htm');"></div>
      <div class="menuitem" tooltip="CSS" icon="text-css.png" onclick="M.LoadModule('Designer.CssPalette.htm');"></div>
      <div class="separator"></div>
      <div class="menuitem" tooltip="RUN" icon="exec.png"  onclick="window.open('system.index.htm?file=' + Editor.fileName);"></div>
      <div class="menuitem" tooltip="Запустить и сохранить" icon="emblem-system.png"  onclick="Editor.SaveFile(); Editor.NeedRun = true;">Сохранить и Запустить</div>
      <div class="menuitem" tooltip="Запустить" icon="emblem-system.png"  onclick="Editor.RunFile();">Запустить</div>
      <div class="status"></div>
  </div>
  <div class="editor">
  </div>
  <div id='VersionHistory' class='invisible'></div>
</win>  

<script type="text/javascript" key="TextEditor">
        
  
  Editor = {};    
  
  Editor.Init = function(){
    //var meta = document.createElement("meta");
    //meta.setAttribute("content", "text/html; charset=utf-8");
    //meta.setAttribute("http-equiv", "Content-Type");
    //W.Body.parentNode.firstChild.appendChild(meta);
    Editor.fileName = Request.Params.file;
    if (Request.Params.url){
	   AX.Init(Request.Params.url);
	   AX.SystemRoot = Request.Params.url;
    }
    AX.File(Editor.fileName, Editor.LoadFileComplete);  
    window.onkeypress = Editor.KeyHandler;
  }  

    Editor.LoadFileComplete = function(result) {
      var parsers = "";
      var header = this.getResponseHeader("Content-Type");
      if (header != null) 
      {
        if (header.Contains(["text/html", "text/htm"])) {
	  parsers = "htmlmixed";
        }
        if (header.Contains(["text/javascript", "application/x-javascript", "text/js"])) {
          parsers = "javascript";
        }
        if (header.Contains("text/css")) {
          parsers = "css";
        }
        if (header.Contains("text/xml")) {
          parsers = "xml";
        }
      }
      Editor.TextEditor = W.get(".text-editor .editor");
      Editor.TextEditor = CodeMirror(Editor.TextEditor, {
        mode: parsers,
        indentUnit : 4,
        indentWithTabs : true,
        tabMode: "indent",
        lineNumbers : true,
        matchBrackets : true,
        electricChars : true,});
        
      Editor.TextEditor.setValue(this.responseText);
	  var title = W.Header.add("<title>" + Editor.fileName + "</title>");
    }

    Editor.SaveFile = function() {
     	if (Editor.fileName != null) {
          var btn = W.get(".menuitem.save");
          btn.hide();
          var content = Editor.TextEditor.getValue();
	  Request.Params.SystemPath;
          Request.Params.UserDomain;
	    //код local storage
	    var vh = W.get("#VersionHistory");//ссылка на див со списком сохранений
          var request = AX.Save(Editor.fileName, content, Editor.SaveComplete);
        }
    }
      
    Editor.SaveComplete = function(){
    	var status = W.get(".header .status");
        var name = W.Wrap(this.responseText).get(".name");
        Notify.Show("Сохранено - " + name.html());
        var btn = W.get(".menuitem.save");
        btn.show();
	if (Editor.NeedRun){
	    Editor.NeedRun = false;
	    if (Request.UserDomain){
		if (Request.SystemPath){
		    window.open('http://' + Request.UserDomain + "/" + Request.SystemPath + "/" + Editor.fileName);
		}
		else{
		    window.open('http://' + Request.UserDomain + "/" + Editor.fileName);
		}
	    }
	    else{
		window.open(Editor.fileName);		
	    }
	}
    };
	
    Editor.RunFile = function(){
	if (Request.UserDomain){
	    if (Request.SystemPath){
		window.open('http://' + Request.UserDomain + "/" + Request.SystemPath + "/" + Editor.fileName);
	    }
	    else{
		window.open('http://' + Request.UserDomain + "/" + Editor.fileName);
	    }
	}
	else{
	    window.open(Editor.fileName);		
	}
    };

    Editor.TextReindentAll = function() {
        this.TextEditor.reindent();
    }
     
    Editor.KeyHandler = function(event){
      // Ctrl + S event;
      if (event.ctrlKey && event.charCode == 115){
        Editor.SaveFile();
        event.stopPropagation();
        event.preventDefault();
        return false;
      }
      return true;
    }
      
    Editor.Init();

</script>
  
<style type="text/css">
  body{
   background-color: #eee;  
  }
  
  
  
  .CodeMirror {
  line-height: 1em;
  font-family: monospace;
    margin-top: 100px;
}

.CodeMirror-gutter {
  position: absolute; left: 0; top: 0;
  background-color: #f7f7f7;
  border-right: 1px solid #eee;
  min-width: 2em;
  height: 100%;
}
.CodeMirror-gutter-text {
  color: #aaa;
  text-align: right;
  padding: .4em .2em .4em .4em;
}
.CodeMirror-lines {
  padding: .4em;
}

.CodeMirror pre {
  -moz-border-radius: 0;
  -webkit-border-radius: 0;
  -o-border-radius: 0;
  border-radius: 0;
  border-width: 0; margin: 0; padding: 0; background: transparent;
  font-family: inherit;
}

.CodeMirror-cursor {
  z-index: 10;
  position: absolute;
  visibility: hidden;
  border-left: 1px solid black !important;
}
.CodeMirror-focused .CodeMirror-cursor {
  visibility: visible;
}

span.CodeMirror-selected {
  background: #ccc !important;
  color: HighlightText !important;
}
.CodeMirror-focused span.CodeMirror-selected {
  background: Highlight !important;
}

.CodeMirror-matchingbracket {color: #0f0 !important;}
.CodeMirror-nonmatchingbracket {color: #f22 !important;}
</style>

