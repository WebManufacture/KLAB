<include url="System.Windows.htm"/>
<script src="DOM.js" />
<script type="text/javascript">
    CssInfo = {};
    CssInfo.Win = null;
    CssInfo.Show = function(element) {
	var win = CssInfo.Win = W.get(".window.css-info");
	var name = element.sname;
	CssInfo.TagInfo = win.get(".tag .name");
	CssInfo.IdInfo = win.get(".tag .identifier");
	CssInfo.TagInfo.html(name);
	var id = element.attr("id");
	if (id != undefined && id != null) {
	    id = "#" + id;   
	}
	else
	{
	    id ="";
	}
	CssInfo.IdInfo.html(id);
	CssInfo.ClassInfo = win.get(".classes");
	CssInfo.ClassInfo.clear();
	var classes = element.classList;
	for (var i = 0; i < classes.length; i++) {
	    var classItem = classes[i];
	    var c = CssInfo.ClassInfo.adv("class-item");
	    c.attr('name',classItem);
	    c.html("." + classItem);
	}
	
	var attributes = "";
	for (var index = 0; index < element.attributes.length; index++) {
	    var attrValue = element.attributes[index];
	    if (attrValue.name != "id" && attrValue.name != "value" && attrValue.name != "class") {
		attributes += "<attribute class='system-element' name='" + attrValue.name +"' value '"+attrValue.value + "'>" + attrValue.nodeName + " = " + attrValue.value +"</attribute>";
	    }
	}
	CssInfo.AttrInfo = win.get(".attributes");
	CssInfo.AttrInfo.html(attributes);
	
	if (element.hasAttribute("value")) {
	    CssInfo.ValueInfo = win.get(".value");
	    CssInfo.ValueInfo.html(element.attr("value"));
	}
	
	CssInfo.CssInfo = win.get(".css-items");
	CssInfo.CssInfo.clear();
	CssInfo.CssInfo.onclick = CssInfo.ToggleInfo;
	
	if (name == "style" || name == "link")
	{
	    //$(".css-info").append(GetCssInfo(element.sheet));
	    // $(".css-info css styles").click(ToggleCssInfo);
	    return;
		}
	
	CssInfo.StylesInfo = win.get(".styles");
	CssInfo.StylesInfo.clear();
	CssInfo.StylesInfo.onclick = CssInfo.ToggleInfo;
	CssInfo.GetStylesInfo(element.style);
	
	var DocumentStyles = element.ownerDocument.styleSheets;
	
	for (var i = 0; i<DocumentStyles.length; i++)
	{
	    CssInfo.GetCssInfo(DocumentStyles[i], element);
	}
	
	win.show();
    }
      
      CssInfo.GetCssInfo = function(styleSheet, element)
	  {
	      var href = styleSheet.href;
	      var info ="<css class='info-item' ";
	      if (href != null) 
		  info += "href='" + href + "'><href>" + href + "</href>";
	      else
		  info += ">";
	      
	      for (var rindex = 0; rindex < styleSheet.cssRules.length; rindex++) {
		  var rule = styleSheet.cssRules[rindex];
		  if (element != undefined && !element.is(rule.selectorText))
		  {
		      continue;
			  }
		  info += "<styles selector='" + rule.selectorText + "'";
		  if (rule.style.length <= 0)
		  {
                      info += "class='empty'";
                    }
	    info += ">";
	    info += "<selector>" + rule.selectorText + "</selector>";
	    info += CssInfo.GetStylesInfo(rule.style);
	    info += "</styles>";
	}
	  info += "</css>";
	  CssInfo.CssInfo.add(info);
	  return info;
      }
    
    
    CssInfo.GetStylesInfo = function(style)
	{
	    var info ="";
	    info += "<table>";
	    for (var i = 0; i < style.length; i++) {
		var name = style[i];
		var value = style.getPropertyValue(name);
		if (name == "color" || name=="background-color" || name=="border-color"){
		    value += "<div class='pantone' style='background-color:" + value + "'>&nbsp;</div>";
		}
		
		info += "<tr class='style-part' name='" + name+ "'><td class='name'>" + name+ ":</td><td class='value'>" + value + "</td></tr>";
	    }
	    info += "</table>"
		CssInfo.StylesInfo.add(info);
	    return info;
	}
	
	CssInfo.ToggleCssInfo = function(event)
	    {
		var parent = this.findParent(".css-items");
		parent.toggle();
	    }
	    
	    CssInfo.ToggleStylesInfo = function(event)
		{
		    var parent = this.findParent(".styles");
		    parent.toggle();
		}
		
		CssInfo.ToggleInfo = function(event)
		    {
			this.hide();
		    }
</script>

<style type="text/css">
    
    
    
    .css-info .info-item
	{
	width: 100%;
    }
    
    .css-info .info-item
	{
	display:block;
	margin-bottom : 10px;
    }
    
    .css-info .tag .name
	{
	color:navy;
	font-weight: bold;
    }
    
    .css-info .tag .identifier
	{
	color:#CC00CC;
    }
    
    .css-info .classes
	{
	color:green;
    }
    
    .css-info .attributes 
	{
	color:#006699;
    }
    
    .css-info .attributes .attribute
	{
	display: block;
    }
    
    .css-info .styles .style-part .name
	{
	
        color:gray;
    }
    
    .css-info .styles
	{
	display: block;
	margin-bottom: 10px;
	cursor: pointer;
    }
    
    .css-info .styles .pantone
	{
	display: block;
	float: right;
	margin-left: 5px;
	cursor: pointer;
	width: 15px;
	height: 10px;    
    }
    
    .css-info .css-items .styles.empty selector
	{
	color:#FF6600;
	
    }
    
    .css-info .css-items .styles table
	{
	display: none;
    }
    
    .css-info .css-items selector
	{
	display: block;
	color:#FF0066;
    }
    
    .css-info .css-items selector:hover, 
	.css-info .classes .class-item:hover,
	.css-info .attributes attribute:hover,
	.css-info .tag .name:hover,
	.css-info .tag .identifier:hover
	{
	text-shadow: 1px 1px 1px gray;
	cursor: pointer;
    }
    
    .css-info .classes selector:hover
	{
	text-shadow: 1px 1px 1px gray;
    }
    
    .css-info .tag .name
	{
	color:navy;
	font-weight: bold;
    }
</style>
<win  class="palette css-info" type="smallwindow" url="System.CssInfo.htm" title="CSS Info">
    
    <div class='info-item tag'>
	<div class="name"></div>
	<div class="identifier"></div>
    </div>
    <div class='classes info-item'></div>
    <div class='attributes info-item'></div>
    <div class='styles info-item'></div>
    <div class='css-items info-item'></div>
    
</win>