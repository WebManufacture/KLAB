<!DOCTYPE html>
<html>
	<head>
		<meta content="text/html; charset=utf-8" http-equiv="Content-Type">
		<link type='text/css' rel='stylesheet' href="http://Services.web-manufacture.net/Styles/System.default.css" />
		
		<link type='text/css' rel='stylesheet' href="identification.css" />
		
		<script type="text/javascript" src="http://services.web-manufacture.net/Base/v1.3/Utils.js"></script>
		<script type="text/javascript" src="http://services.web-manufacture.net/Base/v1.3/DOM.js"></script>
		<script type="text/javascript" src="http://services.web-manufacture.net/Base/v1.3/Url.js"></script>
		<script type="text/javascript" src="http://services.web-manufacture.net/Base/v1.3/Events.js"></script>
		<script type="text/javascript" src="http://services.web-manufacture.net/Base/v1.3/Log.js"></script>
		<script type="text/javascript" src="http://services.web-manufacture.net/Base/v1.3/Net.js"></script>
		<script type="text/javascript" src="http://Services.web-manufacture.net/Base/v1.3/Jasp.js"></script>
		<script type="text/javascript" src="http://Services.web-manufacture.net/Base/v1.3/Modules.js"></script>
		<script type="text/javascript" src="http://Services.web-manufacture.net/Base/v1.3/ui.js"></script>
		
		<script type='text/javascript' src='http://services.web-manufacture.net/SysUtils/NodeEnvironment.js'></script>
		<script type='text/javascript' src='http://klab.web-manufacture.net/Modules/Channels.js'></script>
	</head>
	<body>
		<include url='http://services.web-manufacture.net/ui/Toolbars.htm'></include>
		<include url='http://services.web-manufacture.net/ui/Win.htm'></include>
		<include url='http://services.web-manufacture.net/ui/htmlelements.htm'></include>
		<include url='http://services.web-manufacture.net/Grids/Grids.htm'></include>
		<script type='text/javascript'>
			Clients = {};
			
			Clients.Init = function(){
				InputFileBlock.addEventListener("dragenter", function(e){
					e.stopPropagation();
					e.preventDefault();
					this.add(".feedback");
				}, false);
				InputFileBlock.addEventListener("dragleave", function(e){
					e.stopPropagation();
					e.preventDefault();
					this.del(".feedback");
				}, false);
				InputFileBlock.addEventListener("drop", function(e){
					this.del(".feedback");
					if (e && e.dataTransfer && e.dataTransfer.files){
						e.stopPropagation();
						e.preventDefault();
						var files = e.dataTransfer.files;
						if (files && files.length > 0){
							for (var i = 0; i < files.length; i++){
								Clients.HandleFile(files[i]);
							}
						}						
					}
				}, false);
				
				
				
				ParsedClientsGrid.ParseObject = function(){
					
				}
			}
			
			Clients.HandleFile = function(file){
				if (file.type != "text/xml") {
					return;
				}
				var reader = new FileReader();
				reader.onload = function(result){
					var data = document.createElement("xml");
					data.innerHTML = reader.result;
					var rows = data.all("row");
					if (rows){
						rows.each(function(row){
							ParsedClientsGrid.AddObject(Clients.ParseRow(row));
						});
					}	
				};
				reader.readAsText(file);				
			}
			
			Clients.ParseRow = function(row){
				var data = {};
				var cells = row.all("cell");
				data.id = (Math.random() + "").replace("0.", "");
				data['.draft'] = true;
				data.ClientId = Clients.GetCellValue(cells[13]);
				data.ParentClient = Clients.GetCellValue(cells[1]);
				data.ParentClientId = Clients.GetCellValue(cells[14]);
				data.ClientSource = Clients.GetCellValue(cells[2]);
				data.RegionSource = Clients.GetCellValue(cells[3]);
				data.CitySource = Clients.GetCellValue(cells[4]);
				data.AddressFSource = Clients.GetCellValue(cells[5]);
				data.AddressUSource = Clients.GetCellValue(cells[6]);
				data.INN = Clients.GetCellValue(cells[7]);
				data.CityId = null;
				data.RegionId = null;
				data.Address = "";
				data.Client = "";
				data.Comments = "";
				return data;
			}
			
			Clients.GetCellValue = function(value){
				if (value) return value.textContent;
				return null;
			}
			
			WS.DOMload(Clients.Init);
			
		</script>
		<div class='header toolbar'>
			<div class='menuitem dictionary' id='serverStart' onclick="RegionsGridWin.Show();">
				Регионы
			</div>
		</div>
		<win id='ClientsImportWin' class='window invisible' title='Импорт клиентов'>
			
			<div id='InputFileBlock'>
				Перетащите сюда EXCEL 2003 XML файл для добавления к разбору.
			</div>
			
		</win>
		<div id='ParsedClientsGrid' class='grid load-immediate' storage-url='http://web-manufacture.net/identification/clients'>
			<div class="content">
				<div class="table-header">						
					<input class="search-input hintable" style="width:400px; align:center;">
					<div class="selection-box">
						<div class="select-some select-btn" onclick="this.Get(&quot;^.grid&quot;).SelectAnyAction()">Выбраных: {<span class="selected-items-text"></span>}</div>
						<div class="select-all select-btn" onclick="this.Get(&quot;^.grid&quot;).SelectAllAction()">Выбрать всех</div>
						<div class="clear-selection select-btn invisible" onclick="this.Get(&quot;^.grid&quot;).ClearSelectionAction()">Снять выделение</div>
					</div>
					<div class="search-params invisible">				
						<a class="search-item" href="#">Искать все что содержит</a>				
						<a class="search-item" href="#">Искать в поле</a>				
						<a class="search-item" href="#">Искать </a>				
					</div>					
					<div class="table-controls">	
						<div class="add-button small-object-button" title="Импорт клиентов" onclick="ClientsImportWin.Show();">	</div>
						<div class="mass-switcher small-object-button" title="Mass Mode" onclick="var ut = this.Get('^.grid'); ut._eventCheck('OnMassMode', null, WS.ToggleClass(ut, 'mass-mode')); ">	</div>
					</div>
				</div>
				<div class="objects-container">
				</div>
			</div>
			<div class='table-object prototype'>
				<div class="object-header">
					
				</div>
				<div class="object-content">
					<div class="left-panel">
						<div class="panel control-panel">
							<div class="edit-button small-object-button" onclick="this.Get('^.table-object').EditAction();" title="Edit"></div>
							<div class="parse-button small-object-button" onclick="ParsedGrid.ParseObject(this.Get('^.table-object'));" title="Parse"></div>
							<div class="delete-button small-object-button" onclick="this.Get('^.table-object').DeleteAction();" title="Delete"></div>
						</div>
					</div>					
					<div class="content-panel">
						<div class="content-line">
							<div class="ids">
								ID: 
								<span class="field" field="ClientId">ID</span>
								<span class="field" field="ParentClientId">Нет родителя</span>
								<span class="field" field="RegionId"></span>								
								<span class="field" field="CityId"></span>								
							</div>
							<div class="Client">
								Клиент: 
								<div class="field" field="Client">Не распознан</div>
								<div class="field" field="ParentClient"></div>
								<div class="field source" field="ClientSource">Клиент Первичка</div>
							</div>
							<div class="Location">
								<div class="Region">
									Регион: 
									<div class="field" field="Region">Не распознан</div>									
									<div class="field source" field="RegionSource">Регион Первичка</div>
								</div>
								<div class="City">
									Город: 
									<div class="field" field="City">Не распознан</div>
									
									<div class="field source" field="CitySource">Город Первичка</div>
								</div>
								<div class="Address">
									Адрес: 
									<div class="field" field="Address">Не распознан</div>
									<div class="field source" field="AddressFSource">Адрес клиента Фактический</div>
									<div class="field source" field="AddressUSource">Адрес клиента Юридический</div>
								</div>
							</div>
							<div class="field" field="INN">ИНН</div>			
						</div>
					</div>
					<div class="right-panel">
						
					</div>
				</div>
				<div class="object-footer">
					
				</div>			
			</div>
		</div>
		<script type='text/javascript'>
			Regions = {};
			
			Regions.Init = function(){
				var box = RegionsGrid.get(".import-box");
				box.addEventListener("dragenter", function(e){
					e.stopPropagation();
					e.preventDefault();
					this.add(".feedback");
				}, false);
				box.addEventListener("dragleave", function(e){
					e.stopPropagation();
					e.preventDefault();
					this.del(".feedback");
				}, false);
				box.addEventListener("drop", function(e){
					this.del(".feedback");
					box.hide();
					if (e && e.dataTransfer && e.dataTransfer.files){
						e.stopPropagation();
						e.preventDefault();
						var files = e.dataTransfer.files;
						if (files && files.length > 0){
							for (var i = 0; i < files.length; i++){
								Regions.HandleFile(files[i]);
							}
						}						
					}
				}, false);
				RegionsGrid.oninit = function(){
					RegionsGrid._internalCreateObject = RegionsGrid.CreateObject;
					RegionsGrid.CreateObject = Regions.CreateObjectReplacer;
					RegionsGrid.Load({Type: 100});
					//RegionsGrid.Load();
				}
			};
			
			Regions.HandleFile = function(file){
				if (file.type != "text/xml") {
					return;
				}
				var reader = new FileReader();
				reader.onload = function(result){
					var data = document.createElement("xml");
					data.innerHTML = reader.result;
					var rows = data.all("row");
					var items = [];
					if (rows){
						rows.each(function(row){
							items.push(Regions.ParseRow(row));
						});
						RegionsGrid.Storage.add(items);
					}	
				};
				reader.readAsText(file);	
			};
			
			Regions.Types = {
				"100" : "region",
				"1" : "city",
				"4" : "pgt"
			}
			
			Regions.CreateObjectReplacer = function(obj){
				obj = this._internalCreateObject(obj);	
				var type = Regions.Types[obj.Type + ''];
				if (type){
					obj.add("." + type);
				}
				obj.onclick = Regions.ActivateRegion;
				obj.id = "area" + obj.AreaId;
				if (obj.ParentAreaId){
					var parent = this.get(".content #area" + obj.ParentAreaId);
					if (parent){
						parent.get(".internal-place").add(obj);	
					}
				}
				return obj;
			}
			
			Regions.ActivateRegion = function(event){
				if (this.is('.loading')) return;
				if (this.is('.loaded')) {
					this.get(".internal-place").show(true);
					event.stopPropagation();
					return;
				}
				this.add(".loading");
				var item = this;
				var areaId = parseInt(this.AreaId);
				if (isNaN(areaId)) return;
				event.stopPropagation();
				RegionsGrid.Load({ParentAreaId: areaId}, function(){
					item.del(".loading");
					item.add(".loaded");
				});
			}
			
			Regions.ParseRow = function(row){
				var data = {};
				var cells = row.all("cell");
				data.AreaId = Regions.GetCellIntValue(cells[0]);
				data.ParentAreaId = Regions.GetCellIntValue(cells[1]);
				data.Title = Regions.GetCellValue(cells[3]);				
				if (data.Title) data.Title = data.Title.toLowerCase()
				data.Type = Regions.GetCellIntValue(cells[2]);
				return data;
			}
			
			Regions.GetCellValue = function(value){
				if (value) return value.textContent;
				return null;
			}
			
			Regions.GetCellIntValue = function(value){
				if (value) {
					value = parseInt(value.textContent);
					if (isNaN(value)) value = null;
					return value;
				}
				return null;
			}
			
			Regions.ShowImport = function(){
				var box = RegionsGrid.get(".import-box");
				if (box.is(".invisible")){
					box.show();
				}
				else{
					box.hide();	
				}
			};
			
			WS.DOMload(Regions.Init);
		</script>
		<style type='text/css'>
			#RegionsGrid .import-box{
				width: 100%;
				height: 40px;
				border: dashed 3px #aca;
				border-radius: 10px;
				text-align : center;
				padding-top : 15px;
				font-size: 15px;
				color: gray;
			}
			
			#RegionsGrid .import-box.feedback{
				background-color: #ffc;	
				color: #ffc;
			}
			
			#RegionsGrid .table-object{
				border-color: #ccc;	
			}
			
			#RegionsGrid .table-object>.internal-place{
				padding-left: 10px;	
			}
			
			#RegionsGrid .table-object.loading{
				background-color: gray;	
			}
			
			#RegionsGrid .table-object.loading *{
				display: none;
			}
			
			#RegionsGrid .table-object.loaded{
				border: solid 1px black;
				margin-top: 10px;
				margin-bottom: 10px;
			}
			
			#RegionsGrid .table-object.region{
				cursor: pointer;	
			}
			
			#RegionsGrid .table-object.region{
				background-color : #ffc;					
			}
			
			#RegionsGrid .table-object.region>.content-panel .field{
				font-size: 18px;
				font-weight: bold;
				padding-top: 5px;				
			}
		</style>
		<win id='RegionsGridWin' class='window invisible' title='Справочник регионов'>
			<div id='RegionsGrid' class='grid' storage-url='http://web-manufacture.net/identification/regions'>
				<div class="content" >
					<div class="table-header">			
						<input class="search-input hintable" style="width:400px; align:center;">
						<div class="table-controls">	
							<div class="add-button small-object-button" title="Импорт клиентов" onclick="Regions.ShowImport();">	</div>
						</div>
						<div class="import-box invisible">	
							
						</div>
					</div>
					<div class="objects-container" style="max-height: 400px; overflow-y: scroll;">
					</div>
				</div>
				<div class='table-object prototype item'>
					<div class="right-panel">
						<div class="panel control-panel">
							<div class="edit-button small-object-button" onclick="this.Get('^.table-object').EditAction(); event.stopPropagation();" title="Edit"></div>
							<div class="add-button small-object-button" onclick="this.Get('^.table-object').AddAction(); event.stopPropagation();" title="Add"></div>
							<div class="delete-button small-object-button" onclick="this.Get('^.table-object').DeleteAction(); event.stopPropagation();" title="Delete"></div>
						</div>
					</div>					
					<div class="content-panel">
						<span field="ParentAreaId" class='field invisible id'></span>
						<span field="AreaId" class='field invisible id'></span>
						<span field="Type" class='field invisible'>Тип</span>
						<span field="Title" class='field'>Название</span>
					</div>
					<div class="object-footer internal-place">
					</div>
				</div>
				<div class="edit-object-form prototype" extend="Grids.EditFormActions">
					<div class="object-header">
						
					</div>
					<div class="object-content">
						<input class="field" field="Title" type='text'/>
					</div>
					<div class="object-footer controls-panel">
						<div class="btn-ira ok " title="OK" onclick="this.Get(&quot;^.edit-object-form&quot;).Save(); event.stopPropagation();"> OK </div>
						<div class="btn-ira clear " onclick="this.Get(&quot;^.edit-object-form&quot;).Clear(); event.stopPropagation();" title="Clear"> Clear </div>
						<div class="btn-ira cancel " onclick="this.Get(&quot;^.edit-object-form&quot;).Cancel(); event.stopPropagation();" title="Cancel"> Cancel </div>
					</div>
				</div>
			</div>
		</win>
	</body>
</html>